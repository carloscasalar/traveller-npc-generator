// Code generated by "enumer -type=Gender -output=gender_auto.go -trimprefix=Gender"; DO NOT EDIT.

package generator

import (
	"fmt"
)

const _GenderName = "UnspecifiedFemaleMale"

var _GenderIndex = [...]uint8{0, 11, 17, 21}

func (i Gender) String() string {
	if i < 0 || i >= Gender(len(_GenderIndex)-1) {
		return fmt.Sprintf("Gender(%d)", i)
	}
	return _GenderName[_GenderIndex[i]:_GenderIndex[i+1]]
}

var _GenderValues = []Gender{0, 1, 2}

var _GenderNameToValueMap = map[string]Gender{
	_GenderName[0:11]:  0,
	_GenderName[11:17]: 1,
	_GenderName[17:21]: 2,
}

// GenderString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func GenderString(s string) (Gender, error) {
	if val, ok := _GenderNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Gender values", s)
}

// GenderValues returns all values of the enum
func GenderValues() []Gender {
	return _GenderValues
}

// IsAGender returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Gender) IsAGender() bool {
	for _, v := range _GenderValues {
		if i == v {
			return true
		}
	}
	return false
}
